Search.setIndex({"docnames": ["index", "module_docs/recode", "module_docs/recode/audio", "module_docs/recode/base", "module_docs/recode/util", "table_of_contents"], "filenames": ["index.rst", "module_docs/recode.rst", "module_docs/recode/audio.rst", "module_docs/recode/base.rst", "module_docs/recode/util.rst", "table_of_contents.rst"], "titles": ["Welcome to recode\u2019s documentation!", "recode", "recode.audio", "recode.base", "recode.util", "&lt;no title&gt;"], "terms": {"audio": [0, 1, 5], "decode_pcm_byt": [0, 2, 5], "decode_wav_byt": [0, 2, 5], "decode_wav_header_byt": [0, 2, 5], "encode_pcm_byt": [0, 2, 5], "encode_wav_byt": [0, 2, 5], "encode_wav_header_byt": [0, 2, 5], "extract_wav_header_from_fil": [0, 2, 5], "header_size_of_wav_byt": [0, 2, 5], "mk_pcm_audio_codec": [0, 2, 5], "num_find_num_type_for": [0, 2, 5], "num_type_for": [0, 2, 5], "base": [0, 2, 5], "chunkeddecod": [0, 3, 5], "chunkedencod": [0, 3, 5], "iterativedecod": [0, 3, 5], "metadecod": [0, 3, 5], "metaencod": [0, 3, 5], "structcodecspec": [0, 3, 5], "codec_tupl": [0, 3, 5], "frame_to_meta": [0, 3, 5], "meta_to_fram": [0, 3, 5], "mk_codec": [0, 1, 3, 5], "mk_encoder_and_decod": [0, 3, 5], "specs_from_fram": [0, 3, 5], "util": [0, 5], "get_struct": [0, 4, 5], "list_of_dict": [0, 4, 5], "spy": [0, 4, 5], "take": [0, 4, 5], "index": 0, "modul": [0, 2, 3], "search": 0, "page": 0, "releas": 0, "0": [0, 1, 2, 3], "1": [0, 1, 2, 3, 4], "32": [0, 2, 3], "last": [0, 1, 3], "chang": 0, "apr": 0, "23": [0, 3], "2025": 0, "make": [1, 2], "codec": [1, 2, 3], "fix": [1, 2], "size": [1, 2, 3], "structur": 1, "chunk": [1, 3], "serial": [1, 3], "deseri": [1, 3], "sequenc": [1, 3], "tabular": [1, 3], "data": [1, 2, 3], "time": [1, 3], "seri": 1, "The": [1, 2, 3], "easiest": 1, "bigest": 1, "bang": 1, "your": [1, 3], "buck": 1, "i": [1, 2, 3], "from": [1, 2, 3], "import": [1, 2, 3], "encod": [1, 2, 3], "decod": [1, 2, 3], "list": [1, 2, 3, 4], "ani": [1, 3], "iter": [1, 2, 3, 4], "number": [1, 2, 3], "byte": [1, 2, 3], "b": [1, 2, 3], "3": [1, 2, 3, 4], "14": [1, 3], "x00": [1, 2, 3], "x08": [1, 3], "xc0": [1, 3], "x1f": [1, 3], "x85": [1, 3], "xebq": [1, 3], "xb8": [1, 3], "x1e": [1, 3], "t": [1, 2, 3], "those": [1, 2, 3], "get": [1, 2, 3], "you": [1, 2, 3], "back": [1, 2], "There": 1, "": [1, 2, 3], "onli": [1, 3], "realli": 1, "one": [1, 2, 3], "argument": [1, 3], "need": [1, 3], "know": [1, 3], "about": [1, 2, 3], "first": [1, 3], "call": [1, 3], "chk_format": [1, 3], "which": [1, 3], "string": [1, 3], "charact": [1, 3], "format": [1, 2, 3], "column": 1, "http": [1, 2, 3], "doc": [1, 3], "python": [1, 2, 3], "org": [1, 2, 3], "librari": [1, 3], "struct": [1, 2, 3], "html": [1, 3], "length": 1, "specifi": [1, 2, 3], "channel": [1, 2, 3], "each": [1, 2, 3], "individu": 1, "kind": [1, 3], "should": [1, 2, 3], "appli": [1, 3], "hold": 1, "hors": 1, "we": [1, 2, 3], "ll": [1, 2], "explain": 1, "ve": [1, 3], "just": [1, 2, 3], "been": [1, 3], "through": [1, 3], "fact": 1, "d": [1, 3, 4], "That": 1, "expect": [1, 3], "thei": [1, 3], "8": [1, 2, 3], "doubl": 1, "default": [1, 2], "goo": 1, "becaus": [1, 3], "give": 1, "lot": 1, "room": 1, "knew": 1, "would": 1, "deal": [1, 3], "2": [1, 2, 3, 4], "integ": 1, "most": [1, 3], "wav": [1, 2], "waveform": [1, 2, 3], "have": [1, 2, 3], "chosen": 1, "h": [1, 3, 4], "what": [1, 2, 3], "well": [1, 3], "some": [1, 2, 3], "multi": [1, 3], "stream": [1, 3], "multi_channel_stream": [1, 3], "4": [1, 2, 3, 4], "5": [1, 2, 3, 4], "9": [1, 3], "sai": [1, 3], "exampl": [1, 2, 3], "were": [1, 2, 3], "stereo": [1, 3], "standard": [1, 3], "pcm_16": [1, 2, 3], "do": [1, 3], "thi": [1, 2, 3], "wai": [1, 3], "hh": [1, 3], "pcm_byte": [1, 2, 3], "x03": [1, 2, 3], "xff": [1, 2, 3], "x04": [1, 2, 3], "x05": [1, 3], "xf7": [1, 3], "n_channel": [1, 2, 3], "chk_size_byt": [1, 3], "ar": [1, 2, 3], "want": [1, 3], "assert": [1, 2, 3, 4], "again": [1, 3], "verif": [1, 3], "how": [1, 2, 3], "easi": [1, 3], "misspecifi": [1, 3], "hard": [1, 3], "can": [1, 2, 3], "notic": [1, 3], "did": [1, 3], "It": [1, 3], "advis": [1, 3], "us": [1, 2, 3, 4], "product": [1, 3], "code": [1, 3], "saniti": [1, 3], "everyon": [1, 3], "hhh": [1, 3], "traceback": [1, 3], "recent": [1, 3], "assertionerror": [1, 3], "said": [1, 3], "infer": [1, 3], "given": [1, 2, 3], "match": [1, 3], "6": [1, 3, 4], "final": [1, 3], "so": [1, 3], "far": [1, 3], "done": [1, 3], "hhifd": [1, 3], "But": [1, 3], "see": [1, 2, 3], "actual": [1, 2, 3], "return": [1, 2, 3], "name": [1, 3], "tupl": [1, 3], "mean": [1, 3], "also": [1, 3], "object": [1, 3], "properti": [1, 3], "to_encod": [1, 3], "7": [1, 3], "10": [1, 3], "And": [1, 3], "checkout": [1, 3], "same": [1, 2, 3], "24": [1, 3], "illustr": 2, "wav_byt": 2, "42": 2, "riff": 2, "x00wavefmt": 2, "x10": 2, "x01": [2, 3], "x00t": 2, "x02": [2, 3], "x00data": 2, "x06": [2, 3], "wf": 2, "sr": 2, "pcm": 2, "along": [2, 3], "header": [2, 3], "e": 2, "pars": 2, "gener": 2, "builtin": 2, "wave": 2, "packag": [2, 4], "int16": 2, "Or": 2, "directli": 2, "width": 2, "str": [2, 3], "int": [2, 3], "sourc": [2, 3, 4], "paramet": [2, 3], "sampl": [2, 3], "bit": 2, "numpi": 2, "dtype": 2, "pyaudio": 2, "Will": 2, "try": 2, "figur": 2, "out": 2, "n": [2, 4], "xfe": 2, "wav_header_byt": 2, "dict": [2, 3], "param": 2, "For": 2, "function": [2, 3], "invers": 2, "header_byt": 2, "44100": 2, "width_byt": 2, "nframe": 2, "comptyp": 2, "none": [2, 3], "16": [2, 3], "g": 2, "itself": 2, "rate": 2, "hz": 2, "complet": 2, "file": 2, "type": [2, 3, 4], "data_byt": 2, "44": 2, "right": 2, "inform": 2, "our": 2, "wave_byt": 2, "origin": 2, "decoded_wf": 2, "decoded_sr": 2, "frame": [2, 3], "chk_rate": 2, "option": [2, 3], "note": [2, 3], "If": [2, 3], "read": 2, "correctli": 2, "num": 2, "chk": 2, "exactli": 2, "write": 2, "No": 2, "support": 2, "yet": [2, 3], "len": 2, "31": 2, "x00d": 2, "xac": 2, "x98": 2, "includ": [2, 3], "didn": 2, "filepath": 2, "extract": 2, "without": 2, "entir": 2, "memori": 2, "when": [2, 3], "larg": 2, "numer": [2, 3], "filenam": 2, "path": 2, "meta": [2, 3], "comput": 2, "pair": 2, "uncompress": 2, "raw": 2, "cd": 2, "en": 2, "wikipedia": 2, "wiki": 2, "puls": 2, "code_modul": 2, "A": [2, 3], "other": [2, 3], "let": 2, "check": 2, "over": 2, "more": 2, "combin": 2, "thing": 2, "paint16": 2, "int32": 2, "isinst": 2, "target_num_si": 2, "num_sys_search_ord": 2, "n_bit": 2, "n_byte": 2, "soundfil": 2, "find": 2, "equival": 2, "input": 2, "multipl": 2, "unit": 2, "num_si": 2, "translat": 2, "anoth": 2, "pcm_24": 2, "tip": 2, "functool": 2, "partial": 2, "endpoint": 2, "get_dtype_from_n_byt": 2, "float64": 2, "class": 3, "chk_to_fram": 3, "callabl": 3, "frame_to_chk": 3, "creat": 3, "an": 3, "must": 3, "enabl": 3, "definit": 3, "spec": 3, "express": 3, "inde": 3, "per": 3, "all": 3, "though": 3, "both": 3, "them": 3, "sinc": 3, "act": 3, "extra": 3, "confirm": 3, "problem": 3, "until": 3, "much": 3, "later": 3, "downstream": 3, "therefor": 3, "debug": 3, "To": 3, "utilis": 3, "defin": 3, "two": 3, "maximum": 3, "special": 3, "control": 3, "order": 3, "align": 3, "being": 3, "pack": 3, "unpack": 3, "properli": 3, "seen": 3, "follow": 3, "print": 3, "decoded_fram": 3, "reason": 3, "good": 3, "On": 3, "hand": 3, "ha": 3, "differ": 3, "float": 3, "show": 3, "hdh": 3, "12": 3, "45": 3, "321": 3, "x9a": 3, "x99": 3, "x00b": 3, "x10x9": 3, "xb4h": 3, "x11": 3, "instead": 3, "full": 3, "similar": 3, "iter_unpack": 3, "doe": 3, "instanti": 3, "iterativedecor": 3, "below": 3, "hdhd": 3, "iter_fram": 3, "next": [3, 4], "look": 3, "datafram": 3, "convert": 3, "foo": [3, 4], "bar": [3, 4], "513": 3, "456": 3, "dd": 3, "alia": 3, "field": 3, "tabluar": 3, "row": 3, "custom": 3, "x08x00custom": 3, "x1cx00custom": 3, "appl": 3, "banana": 3, "tomatox01x00x01x00x02x00x03x00x02x00": 3, "x03x00x02x00x05x00x01x00x03x00x04x00tx00": 3, "tomato": 3, "implicitli": 3, "ignor": 3, "like": 3, "_": 3, "x01x00x02x00x03x00": 3, "still": 3, "long": 3, "redefin": 3, "output": 3, "throughout": 4, "str_type": 4, "001": 4, "col": 4, "val": 4, "peek": 4, "recod": 5}, "objects": {"": [[1, 0, 0, "-", "recode"]], "recode": [[2, 0, 0, "-", "audio"], [3, 0, 0, "-", "base"], [4, 0, 0, "-", "util"]], "recode.audio": [[2, 1, 1, "", "decode_pcm_bytes"], [2, 1, 1, "", "decode_wav_bytes"], [2, 1, 1, "", "decode_wav_header_bytes"], [2, 1, 1, "", "encode_pcm_bytes"], [2, 1, 1, "", "encode_wav_bytes"], [2, 1, 1, "", "encode_wav_header_bytes"], [2, 1, 1, "", "extract_wav_header_from_file"], [2, 1, 1, "", "header_size_of_wav_bytes"], [2, 1, 1, "", "mk_pcm_audio_codec"], [2, 1, 1, "", "num_find_num_type_for"], [2, 1, 1, "", "num_type_for"]], "recode.base": [[3, 2, 1, "", "ChunkedDecoder"], [3, 2, 1, "", "ChunkedEncoder"], [3, 2, 1, "", "IterativeDecoder"], [3, 2, 1, "", "MetaDecoder"], [3, 2, 1, "", "MetaEncoder"], [3, 2, 1, "", "StructCodecSpecs"], [3, 2, 1, "", "codec_tuple"], [3, 1, 1, "", "frame_to_meta"], [3, 1, 1, "", "meta_to_frame"], [3, 1, 1, "", "mk_codec"], [3, 1, 1, "", "mk_encoder_and_decoder"], [3, 1, 1, "", "specs_from_frames"]], "recode.base.codec_tuple": [[3, 3, 1, "", "decode"], [3, 3, 1, "", "encode"]], "recode.util": [[4, 1, 1, "", "get_struct"], [4, 1, 1, "", "list_of_dicts"], [4, 1, 1, "", "spy"], [4, 1, 1, "", "take"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "attribute", "Python attribute"]}, "titleterms": {"welcom": 0, "recod": [0, 1, 2, 3, 4], "": 0, "document": 0, "content": [0, 5], "indic": 0, "tabl": 0, "audio": 2, "base": 3, "util": 4}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Welcome to recode\u2019s documentation!": [[0, "welcome-to-recode-s-documentation"]], "Contents:": [[0, null], [5, null]], "Indices and tables": [[0, "indices-and-tables"]], "recode": [[1, "module-recode"]], "recode.audio": [[2, "module-recode.audio"]], "recode.base": [[3, "module-recode.base"]], "recode.util": [[4, "module-recode.util"]]}, "indexentries": {"module": [[1, "module-recode"], [2, "module-recode.audio"], [3, "module-recode.base"], [4, "module-recode.util"]], "recode": [[1, "module-recode"]], "decode_pcm_bytes() (in module recode.audio)": [[2, "recode.audio.decode_pcm_bytes"]], "decode_wav_bytes() (in module recode.audio)": [[2, "recode.audio.decode_wav_bytes"]], "decode_wav_header_bytes() (in module recode.audio)": [[2, "recode.audio.decode_wav_header_bytes"]], "encode_pcm_bytes() (in module recode.audio)": [[2, "recode.audio.encode_pcm_bytes"]], "encode_wav_bytes() (in module recode.audio)": [[2, "recode.audio.encode_wav_bytes"]], "encode_wav_header_bytes() (in module recode.audio)": [[2, "recode.audio.encode_wav_header_bytes"]], "extract_wav_header_from_file() (in module recode.audio)": [[2, "recode.audio.extract_wav_header_from_file"]], "header_size_of_wav_bytes() (in module recode.audio)": [[2, "recode.audio.header_size_of_wav_bytes"]], "mk_pcm_audio_codec() (in module recode.audio)": [[2, "recode.audio.mk_pcm_audio_codec"]], "num_find_num_type_for() (in module recode.audio)": [[2, "recode.audio.num_find_num_type_for"]], "num_type_for() (in module recode.audio)": [[2, "recode.audio.num_type_for"]], "recode.audio": [[2, "module-recode.audio"]], "chunkeddecoder (class in recode.base)": [[3, "recode.base.ChunkedDecoder"]], "chunkedencoder (class in recode.base)": [[3, "recode.base.ChunkedEncoder"]], "iterativedecoder (class in recode.base)": [[3, "recode.base.IterativeDecoder"]], "metadecoder (class in recode.base)": [[3, "recode.base.MetaDecoder"]], "metaencoder (class in recode.base)": [[3, "recode.base.MetaEncoder"]], "structcodecspecs (class in recode.base)": [[3, "recode.base.StructCodecSpecs"]], "codec_tuple (class in recode.base)": [[3, "recode.base.codec_tuple"]], "decode (recode.base.codec_tuple attribute)": [[3, "recode.base.codec_tuple.decode"]], "encode (recode.base.codec_tuple attribute)": [[3, "recode.base.codec_tuple.encode"]], "frame_to_meta() (in module recode.base)": [[3, "recode.base.frame_to_meta"]], "meta_to_frame() (in module recode.base)": [[3, "recode.base.meta_to_frame"]], "mk_codec() (in module recode.base)": [[3, "recode.base.mk_codec"]], "mk_encoder_and_decoder() (in module recode.base)": [[3, "recode.base.mk_encoder_and_decoder"]], "recode.base": [[3, "module-recode.base"]], "specs_from_frames() (in module recode.base)": [[3, "recode.base.specs_from_frames"]], "get_struct() (in module recode.util)": [[4, "recode.util.get_struct"]], "list_of_dicts() (in module recode.util)": [[4, "recode.util.list_of_dicts"]], "recode.util": [[4, "module-recode.util"]], "spy() (in module recode.util)": [[4, "recode.util.spy"]], "take() (in module recode.util)": [[4, "recode.util.take"]]}})